// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_multisig
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-22, STEPS: `100`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 512

// Executed Command:
// ./target/release/polymesh
// benchmark
// pallet
// -s
// 100
// -r
// 5
// -p=pallet_multisig
// -e=*
// --heap-pages
// 4096
// --db-cache
// 512
// --execution
// wasm
// --wasm-execution
// compiled
// --output
// ./pallets/weights/src/
// --template
// ./.maintain/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use polymesh_runtime_common::{RocksDbWeight as DbWeight, Weight};

/// Weights for pallet_multisig using the Substrate node and recommended hardware.
pub struct WeightInfo;
impl pallet_multisig::WeightInfo for WeightInfo {
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: MultiSig MultiSigNonce (r:1 w:1)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Storage: Identity Authorizations (r:0 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:0 w:1)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    fn create_multisig(i: u32) -> Weight {
        (94_723_000 as Weight)
            // Standard Error: 219_000
            .saturating_add((17_265_000 as Weight).saturating_mul(i as Weight))
            .saturating_add(DbWeight::get().reads(4 as Weight))
            .saturating_add(DbWeight::get().writes(4 as Weight))
            .saturating_add(DbWeight::get().writes((2 as Weight).saturating_mul(i as Weight)))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig ProposalIds (r:1 w:1)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Storage: MultiSig Proposals (r:0 w:1)
    fn create_or_approve_proposal_as_identity() -> Weight {
        (191_998_000 as Weight)
            .saturating_add(DbWeight::get().reads(10 as Weight))
            .saturating_add(DbWeight::get().writes(7 as Weight))
    }
    // Storage: MultiSig ProposalIds (r:1 w:1)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Storage: MultiSig Proposals (r:0 w:1)
    fn create_or_approve_proposal_as_key() -> Weight {
        (265_725_000 as Weight)
            .saturating_add(DbWeight::get().reads(11 as Weight))
            .saturating_add(DbWeight::get().writes(7 as Weight))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Storage: MultiSig Proposals (r:0 w:1)
    fn create_proposal_as_identity() -> Weight {
        (147_361_000 as Weight)
            .saturating_add(DbWeight::get().reads(9 as Weight))
            .saturating_add(DbWeight::get().writes(6 as Weight))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig MultiSigTxDone (r:1 w:1)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:0 w:1)
    // Storage: MultiSig Proposals (r:0 w:1)
    fn create_proposal_as_key() -> Weight {
        (152_857_000 as Weight)
            .saturating_add(DbWeight::get().reads(10 as Weight))
            .saturating_add(DbWeight::get().writes(6 as Weight))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    fn approve_as_identity() -> Weight {
        (147_117_000 as Weight)
            .saturating_add(DbWeight::get().reads(9 as Weight))
            .saturating_add(DbWeight::get().writes(4 as Weight))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Scheduler Lookup (r:1 w:1)
    // Storage: Scheduler Agenda (r:1 w:1)
    fn approve_as_key() -> Weight {
        (126_430_000 as Weight)
            .saturating_add(DbWeight::get().reads(8 as Weight))
            .saturating_add(DbWeight::get().writes(4 as Weight))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    fn reject_as_identity() -> Weight {
        (117_515_000 as Weight)
            .saturating_add(DbWeight::get().reads(7 as Weight))
            .saturating_add(DbWeight::get().writes(2 as Weight))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Storage: MultiSig Votes (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    fn reject_as_key() -> Weight {
        (89_431_000 as Weight)
            .saturating_add(DbWeight::get().reads(6 as Weight))
            .saturating_add(DbWeight::get().writes(2 as Weight))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: Identity Authorizations (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    fn accept_multisig_signer_as_identity() -> Weight {
        (96_603_000 as Weight)
            .saturating_add(DbWeight::get().reads(6 as Weight))
            .saturating_add(DbWeight::get().writes(4 as Weight))
    }
    // Storage: Identity Authorizations (r:1 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Storage: Identity KeyRecords (r:1 w:1)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    fn accept_multisig_signer_as_key() -> Weight {
        (100_271_000 as Weight)
            .saturating_add(DbWeight::get().reads(6 as Weight))
            .saturating_add(DbWeight::get().writes(5 as Weight))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Storage: Identity Authorizations (r:0 w:1)
    fn add_multisig_signer() -> Weight {
        (68_606_000 as Weight)
            .saturating_add(DbWeight::get().reads(2 as Weight))
            .saturating_add(DbWeight::get().writes(3 as Weight))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: Identity CurrentDid (r:1 w:0)
    fn remove_multisig_signer() -> Weight {
        (73_975_000 as Weight)
            .saturating_add(DbWeight::get().reads(6 as Weight))
            .saturating_add(DbWeight::get().writes(2 as Weight))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity DidRecords (r:1 w:0)
    // Storage: Identity MultiPurposeNonce (r:1 w:1)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Storage: Identity Authorizations (r:0 w:1)
    fn add_multisig_signers_via_creator(i: u32) -> Weight {
        (165_799_000 as Weight)
            // Standard Error: 273_000
            .saturating_add((23_626_000 as Weight).saturating_mul(i as Weight))
            .saturating_add(DbWeight::get().reads(5 as Weight))
            .saturating_add(DbWeight::get().writes(1 as Weight))
            .saturating_add(DbWeight::get().writes((2 as Weight).saturating_mul(i as Weight)))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: Identity KeyRecords (r:2 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity DidRecords (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    fn remove_multisig_signers_via_creator(i: u32) -> Weight {
        (24_806_000 as Weight)
            // Standard Error: 367_000
            .saturating_add((32_285_000 as Weight).saturating_mul(i as Weight))
            .saturating_add(DbWeight::get().reads(7 as Weight))
            .saturating_add(DbWeight::get().reads((2 as Weight).saturating_mul(i as Weight)))
            .saturating_add(DbWeight::get().writes(1 as Weight))
            .saturating_add(DbWeight::get().writes((2 as Weight).saturating_mul(i as Weight)))
    }
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    fn change_sigs_required() -> Weight {
        (53_135_000 as Weight)
            .saturating_add(DbWeight::get().reads(4 as Weight))
            .saturating_add(DbWeight::get().writes(1 as Weight))
    }
    // Storage: Identity KeyRecords (r:2 w:1)
    // Storage: MultiSig MultiSigToIdentity (r:1 w:0)
    // Storage: Identity DidKeys (r:0 w:1)
    fn make_multisig_secondary() -> Weight {
        (67_282_000 as Weight)
            .saturating_add(DbWeight::get().reads(3 as Weight))
            .saturating_add(DbWeight::get().writes(2 as Weight))
    }
    // Storage: Identity CurrentDid (r:1 w:0)
    // Storage: Identity KeyRecords (r:2 w:2)
    // Storage: MultiSig MultiSigToIdentity (r:2 w:0)
    // Storage: Identity DidRecords (r:1 w:1)
    // Storage: Identity AccountKeyRefCount (r:1 w:0)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Storage: Identity DidKeys (r:0 w:2)
    fn make_multisig_primary() -> Weight {
        (100_028_000 as Weight)
            .saturating_add(DbWeight::get().reads(8 as Weight))
            .saturating_add(DbWeight::get().writes(5 as Weight))
    }
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Storage: Permissions CurrentPalletName (r:1 w:1)
    // Storage: Permissions CurrentDispatchableName (r:1 w:1)
    // Storage: MultiSig ProposalDetail (r:1 w:1)
    // Storage: Identity CurrentDid (r:0 w:1)
    fn execute_scheduled_proposal() -> Weight {
        (110_785_000 as Weight)
            .saturating_add(DbWeight::get().reads(9 as Weight))
            .saturating_add(DbWeight::get().writes(4 as Weight))
    }
}
