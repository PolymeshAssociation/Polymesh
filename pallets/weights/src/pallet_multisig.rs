// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_multisig
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-08-06, STEPS: `10`, REPEAT: 2, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Native), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 512
//! HOSTNAME: `trinity`, CPU: `AMD Ryzen 9 7950X 16-Core Processor`

// Executed Command:
// target/release/polymesh
// benchmark
// pallet
// -p=pallet_multisig
// -e=*
// -s
// 10
// -r
// 2
// --db-cache
// 512
// --heap-pages
// 4096
// --execution
// native
// --output
// ./
// --template
// ./.maintain/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use polymesh_runtime_common::{RocksDbWeight as DbWeight, Weight};

/// Weights for pallet_multisig using the Substrate node and recommended hardware.
pub struct SubstrateWeight;
impl pallet_multisig::WeightInfo for SubstrateWeight {
    // Storage: Identity KeyRecords (r:2 w:1)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigNonce (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigNonce (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity NumberOfGivenAuths (r:1 w:1)
    // Proof Skipped: Identity NumberOfGivenAuths (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentAuthId (r:1 w:1)
    // Proof Skipped: Identity CurrentAuthId (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:50)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidKeys (r:0 w:1)
    // Proof Skipped: Identity DidKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:50)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig PayingDid (r:0 w:1)
    // Proof Skipped: MultiSig PayingDid (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:0 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 50]`.
    fn create_multisig(i: u32) -> Weight {
        // Minimum execution time: 21_591 nanoseconds.
        Weight::from_ref_time(19_882_067)
            // Standard Error: 18_124
            .saturating_add(Weight::from_ref_time(3_092_806).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().writes(7))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NextProposalId (r:1 w:1)
    // Proof Skipped: MultiSig NextProposalId (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalVoteCounts (r:0 w:1)
    // Proof Skipped: MultiSig ProposalVoteCounts (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalStates (r:0 w:1)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    fn create_proposal() -> Weight {
        // Minimum execution time: 25_288 nanoseconds.
        Weight::from_ref_time(27_221_000)
            .saturating_add(DbWeight::get().reads(7))
            .saturating_add(DbWeight::get().writes(5))
    }
    // Storage: MultiSig ProposalStates (r:1 w:0)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalVoteCounts (r:1 w:1)
    // Proof Skipped: MultiSig ProposalVoteCounts (max_values: None, max_size: None, mode: Measured)
    fn approve() -> Weight {
        // Minimum execution time: 24_296 nanoseconds.
        Weight::from_ref_time(25_077_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(2))
    }
    // Storage: MultiSig Proposals (r:1 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:1)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:1)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig ExecutionReentry (r:1 w:1)
    // Proof Skipped: MultiSig ExecutionReentry (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig ProposalStates (r:0 w:1)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    fn execute_proposal() -> Weight {
        // Minimum execution time: 14_457 nanoseconds.
        Weight::from_ref_time(15_088_000)
            .saturating_add(DbWeight::get().reads(4))
            .saturating_add(DbWeight::get().writes(5))
    }
    // Storage: MultiSig ProposalStates (r:1 w:1)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalVoteCounts (r:1 w:1)
    // Proof Skipped: MultiSig ProposalVoteCounts (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    fn reject() -> Weight {
        // Minimum execution time: 26_549 nanoseconds.
        Weight::from_ref_time(28_082_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(4))
    }
    // Storage: Identity Authorizations (r:1 w:1)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity OutdatedAuthorizations (r:1 w:0)
    // Proof Skipped: Identity OutdatedAuthorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:2 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:2 w:1)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity NumberOfGivenAuths (r:1 w:1)
    // Proof Skipped: Identity NumberOfGivenAuths (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    fn accept_multisig_signer() -> Weight {
        // Minimum execution time: 25_527 nanoseconds.
        Weight::from_ref_time(28_533_000)
            .saturating_add(DbWeight::get().reads(11))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity NumberOfGivenAuths (r:1 w:1)
    // Proof Skipped: Identity NumberOfGivenAuths (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentAuthId (r:1 w:1)
    // Proof Skipped: Identity CurrentAuthId (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:49)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:49)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 49]`.
    fn add_multisig_signers(i: u32) -> Weight {
        // Minimum execution time: 19_616 nanoseconds.
        Weight::from_ref_time(18_005_110)
            // Standard Error: 39_112
            .saturating_add(Weight::from_ref_time(3_187_129).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(2))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:50 w:49)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:49 w:49)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[2, 50]`.
    fn remove_multisig_signers(i: u32) -> Weight {
        // Minimum execution time: 21_600 nanoseconds.
        Weight::from_ref_time(12_661_922)
            // Standard Error: 219_802
            .saturating_add(Weight::from_ref_time(4_455_378).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(3))
            .saturating_add(DbWeight::get().reads((2_u64).saturating_mul(i.into())))
            .saturating_add(DbWeight::get().writes(3))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig AdminDid (r:1 w:0)
    // Proof Skipped: MultiSig AdminDid (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity NumberOfGivenAuths (r:1 w:1)
    // Proof Skipped: Identity NumberOfGivenAuths (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentAuthId (r:1 w:1)
    // Proof Skipped: Identity CurrentAuthId (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:49)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:0 w:49)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[1, 49]`.
    fn add_multisig_signers_via_admin(i: u32) -> Weight {
        // Minimum execution time: 23_434 nanoseconds.
        Weight::from_ref_time(21_369_515)
            // Standard Error: 39_374
            .saturating_add(Weight::from_ref_time(3_235_910).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(2))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: Identity KeyRecords (r:51 w:49)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig AdminDid (r:1 w:0)
    // Proof Skipped: MultiSig AdminDid (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:1)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:49 w:49)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    /// The range of component `i` is `[2, 50]`.
    fn remove_multisig_signers_via_admin(i: u32) -> Weight {
        // Minimum execution time: 25_378 nanoseconds.
        Weight::from_ref_time(17_917_120)
            // Standard Error: 57_752
            .saturating_add(Weight::from_ref_time(4_260_942).saturating_mul(i.into()))
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().reads((2_u64).saturating_mul(i.into())))
            .saturating_add(DbWeight::get().writes(3))
            .saturating_add(DbWeight::get().writes((2_u64).saturating_mul(i.into())))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    fn change_sigs_required() -> Weight {
        // Minimum execution time: 15_068 nanoseconds.
        Weight::from_ref_time(16_852_000)
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig AdminDid (r:1 w:0)
    // Proof Skipped: MultiSig AdminDid (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:1)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Proof Skipped: Identity IsDidFrozen (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NumberOfSigners (r:1 w:0)
    // Proof Skipped: MultiSig NumberOfSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CddAuthForPrimaryKeyRotation (r:1 w:0)
    // Proof Skipped: Identity CddAuthForPrimaryKeyRotation (max_values: Some(1), max_size: None, mode: Measured)
    fn change_sigs_required_via_admin() -> Weight {
        // Minimum execution time: 19_246 nanoseconds.
        Weight::from_ref_time(20_728_000)
            .saturating_add(DbWeight::get().reads(7))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig AdminDid (r:0 w:1)
    // Proof Skipped: MultiSig AdminDid (max_values: None, max_size: None, mode: Measured)
    fn add_admin() -> Weight {
        // Minimum execution time: 6_272 nanoseconds.
        Weight::from_ref_time(9_418_000)
            .saturating_add(DbWeight::get().reads(1))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig AdminDid (r:1 w:1)
    // Proof Skipped: MultiSig AdminDid (max_values: None, max_size: None, mode: Measured)
    fn remove_admin_via_admin() -> Weight {
        // Minimum execution time: 10_159 nanoseconds.
        Weight::from_ref_time(11_151_000)
            .saturating_add(DbWeight::get().reads(2))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig PayingDid (r:0 w:1)
    // Proof Skipped: MultiSig PayingDid (max_values: None, max_size: None, mode: Measured)
    fn remove_payer() -> Weight {
        // Minimum execution time: 5_350 nanoseconds.
        Weight::from_ref_time(5_871_000)
            .saturating_add(DbWeight::get().reads(1))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig PayingDid (r:1 w:1)
    // Proof Skipped: MultiSig PayingDid (max_values: None, max_size: None, mode: Measured)
    fn remove_payer_via_payer() -> Weight {
        // Minimum execution time: 9_999 nanoseconds.
        Weight::from_ref_time(10_299_000)
            .saturating_add(DbWeight::get().reads(2))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity Authorizations (r:1 w:1)
    // Proof Skipped: Identity Authorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity OutdatedAuthorizations (r:1 w:0)
    // Proof Skipped: Identity OutdatedAuthorizations (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidRecords (r:1 w:0)
    // Proof Skipped: Identity DidRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:1)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Proof Skipped: Instance2Group ActiveMembers (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Identity Claims (r:2 w:0)
    // Proof Skipped: Identity Claims (max_values: None, max_size: None, mode: Measured)
    // Storage: ProtocolFee Coefficient (r:1 w:0)
    // Proof Skipped: ProtocolFee Coefficient (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: ProtocolFee BaseFees (r:1 w:0)
    // Proof Skipped: ProtocolFee BaseFees (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity NumberOfGivenAuths (r:1 w:1)
    // Proof Skipped: Identity NumberOfGivenAuths (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity AuthorizationsGiven (r:0 w:1)
    // Proof Skipped: Identity AuthorizationsGiven (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity DidKeys (r:0 w:1)
    // Proof Skipped: Identity DidKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity CurrentDid (r:0 w:1)
    // Proof Skipped: Identity CurrentDid (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: MultiSig AuthToProposalId (r:0 w:1)
    // Proof Skipped: MultiSig AuthToProposalId (max_values: None, max_size: None, mode: Measured)
    fn join_identity() -> Weight {
        // Minimum execution time: 38_291 nanoseconds.
        Weight::from_ref_time(54_121_000)
            .saturating_add(DbWeight::get().reads(12))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: MultiSig AuthToProposalId (r:1 w:1)
    // Proof Skipped: MultiSig AuthToProposalId (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig NextProposalId (r:1 w:1)
    // Proof Skipped: MultiSig NextProposalId (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalVoteCounts (r:0 w:1)
    // Proof Skipped: MultiSig ProposalVoteCounts (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:0 w:1)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalStates (r:0 w:1)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    fn create_join_identity() -> Weight {
        // Minimum execution time: 23_574 nanoseconds.
        Weight::from_ref_time(25_358_000)
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: MultiSig AuthToProposalId (r:1 w:0)
    // Proof Skipped: MultiSig AuthToProposalId (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalStates (r:1 w:0)
    // Proof Skipped: MultiSig ProposalStates (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSigners (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSigners (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig MultiSigSignsRequired (r:1 w:0)
    // Proof Skipped: MultiSig MultiSigSignsRequired (max_values: None, max_size: None, mode: Measured)
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Votes (r:1 w:1)
    // Proof Skipped: MultiSig Votes (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig Proposals (r:1 w:0)
    // Proof Skipped: MultiSig Proposals (max_values: None, max_size: None, mode: Measured)
    // Storage: MultiSig ProposalVoteCounts (r:1 w:1)
    // Proof Skipped: MultiSig ProposalVoteCounts (max_values: None, max_size: None, mode: Measured)
    fn approve_join_identity() -> Weight {
        // Minimum execution time: 25_678 nanoseconds.
        Weight::from_ref_time(30_507_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(2))
    }
}
