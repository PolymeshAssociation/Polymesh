// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_corporate_actions
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-24, STEPS: `100`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 512
//! HOSTNAME: `ubuntu-8gb-hel1-5`, CPU: `AMD EPYC Processor`

// Executed Command:
// target/release/polymesh
// benchmark
// pallet
// -s
// 100
// -r
// 5
// -p=*
// -e=*
// --heap-pages
// 4096
// --db-cache
// 512
// --execution
// wasm
// --wasm-execution
// compiled
// --output
// ./pallets/weights/src/
// --template
// ./.maintain/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use polymesh_runtime_common::{RocksDbWeight as DbWeight, Weight};

/// Weights for pallet_corporate_actions using the Substrate node and recommended hardware.
pub struct SubstrateWeight;
impl pallet_corporate_actions::WeightInfo for SubstrateWeight {
    // Storage: CorporateAction MaxDetailsLength (r:0 w:1)
    // Proof Skipped: CorporateAction MaxDetailsLength (max_values: Some(1), max_size: None, mode: Measured)
    fn set_max_details_length() -> Weight {
        // Minimum execution time: 17_101 nanoseconds.
        Weight::from_ref_time(20_058_000).saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction DefaultTargetIdentities (r:1 w:1)
    // Proof Skipped: CorporateAction DefaultTargetIdentities (max_values: None, max_size: None, mode: Measured)
    /// The range of component `t` is `[0, 500]`.
    fn set_default_targets(t: u32) -> Weight {
        // Minimum execution time: 61_895 nanoseconds.
        Weight::from_ref_time(95_467_329)
            // Standard Error: 11_283
            .saturating_add(Weight::from_ref_time(565_444).saturating_mul(t.into()))
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction DefaultWithholdingTax (r:1 w:1)
    // Proof Skipped: CorporateAction DefaultWithholdingTax (max_values: None, max_size: None, mode: Measured)
    fn set_default_withholding_tax() -> Weight {
        // Minimum execution time: 53_439 nanoseconds.
        Weight::from_ref_time(57_198_000)
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction DidWithholdingTax (r:1 w:1)
    // Proof Skipped: CorporateAction DidWithholdingTax (max_values: None, max_size: None, mode: Measured)
    /// The range of component `w` is `[0, 999]`.
    fn set_did_withholding_tax(w: u32) -> Weight {
        // Minimum execution time: 66_334 nanoseconds.
        Weight::from_ref_time(164_326_878)
            // Standard Error: 8_312
            .saturating_add(Weight::from_ref_time(149_480).saturating_mul(w.into()))
            .saturating_add(DbWeight::get().reads(5))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction MaxDetailsLength (r:1 w:0)
    // Proof Skipped: CorporateAction MaxDetailsLength (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CAIdSequence (r:1 w:1)
    // Proof Skipped: CorporateAction CAIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Checkpoint SchedulesMaxComplexity (r:1 w:0)
    // Proof Skipped: Checkpoint SchedulesMaxComplexity (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Checkpoint CachedNextCheckpoints (r:1 w:1)
    // Proof Skipped: Checkpoint CachedNextCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleIdSequence (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: ProtocolFee Coefficient (r:1 w:0)
    // Proof Skipped: ProtocolFee Coefficient (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: ProtocolFee BaseFees (r:1 w:0)
    // Proof Skipped: ProtocolFee BaseFees (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction DefaultTargetIdentities (r:1 w:0)
    // Proof Skipped: CorporateAction DefaultTargetIdentities (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction DefaultWithholdingTax (r:1 w:0)
    // Proof Skipped: CorporateAction DefaultWithholdingTax (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction DidWithholdingTax (r:1 w:0)
    // Proof Skipped: CorporateAction DidWithholdingTax (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduledCheckpoints (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduledCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleRefCount (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:0 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction Details (r:0 w:1)
    // Proof Skipped: CorporateAction Details (max_values: None, max_size: None, mode: Measured)
    /// The range of component `w` is `[0, 1000]`.
    /// The range of component `t` is `[0, 500]`.
    fn initiate_corporate_action_use_defaults(w: u32, t: u32) -> Weight {
        // Minimum execution time: 306_022 nanoseconds.
        Weight::from_ref_time(344_561_083)
            // Standard Error: 8_417
            .saturating_add(Weight::from_ref_time(187_489).saturating_mul(w.into()))
            // Standard Error: 16_827
            .saturating_add(Weight::from_ref_time(68_348).saturating_mul(t.into()))
            .saturating_add(DbWeight::get().reads(15))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction MaxDetailsLength (r:1 w:0)
    // Proof Skipped: CorporateAction MaxDetailsLength (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CAIdSequence (r:1 w:1)
    // Proof Skipped: CorporateAction CAIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Checkpoint SchedulesMaxComplexity (r:1 w:0)
    // Proof Skipped: Checkpoint SchedulesMaxComplexity (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Checkpoint CachedNextCheckpoints (r:1 w:1)
    // Proof Skipped: Checkpoint CachedNextCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleIdSequence (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: ProtocolFee Coefficient (r:1 w:0)
    // Proof Skipped: ProtocolFee Coefficient (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: ProtocolFee BaseFees (r:1 w:0)
    // Proof Skipped: ProtocolFee BaseFees (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduledCheckpoints (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduledCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleRefCount (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:0 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction Details (r:0 w:1)
    // Proof Skipped: CorporateAction Details (max_values: None, max_size: None, mode: Measured)
    /// The range of component `w` is `[0, 1000]`.
    /// The range of component `t` is `[0, 500]`.
    fn initiate_corporate_action_provided(w: u32, t: u32) -> Weight {
        // Minimum execution time: 499_413 nanoseconds.
        Weight::from_ref_time(249_635_568)
            // Standard Error: 12_436
            .saturating_add(Weight::from_ref_time(605_764).saturating_mul(w.into()))
            // Standard Error: 24_861
            .saturating_add(Weight::from_ref_time(632_959).saturating_mul(t.into()))
            .saturating_add(DbWeight::get().reads(12))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:1 w:0)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: Asset AssetDocuments (r:1000 w:0)
    // Proof Skipped: Asset AssetDocuments (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction CADocLink (r:1 w:1)
    // Proof Skipped: CorporateAction CADocLink (max_values: None, max_size: None, mode: Measured)
    /// The range of component `d` is `[0, 1000]`.
    fn link_ca_doc(d: u32) -> Weight {
        // Minimum execution time: 69_951 nanoseconds.
        Weight::from_ref_time(130_145_105)
            // Standard Error: 104_045
            .saturating_add(Weight::from_ref_time(6_587_403).saturating_mul(d.into()))
            .saturating_add(DbWeight::get().reads(6))
            .saturating_add(DbWeight::get().reads((1_u64).saturating_mul(d.into())))
            .saturating_add(DbWeight::get().writes(1))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:1 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateBallot TimeRanges (r:1 w:1)
    // Proof Skipped: CorporateBallot TimeRanges (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Checkpoint ScheduleRefCount (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction Details (r:0 w:1)
    // Proof Skipped: CorporateAction Details (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction CADocLink (r:0 w:1)
    // Proof Skipped: CorporateAction CADocLink (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateBallot MotionNumChoices (r:0 w:1)
    // Proof Skipped: CorporateBallot MotionNumChoices (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateBallot Metas (r:0 w:1)
    // Proof Skipped: CorporateBallot Metas (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateBallot RCV (r:0 w:1)
    // Proof Skipped: CorporateBallot RCV (max_values: None, max_size: None, mode: Measured)
    fn remove_ca_with_ballot() -> Weight {
        // Minimum execution time: 132_979 nanoseconds.
        Weight::from_ref_time(155_630_000)
            .saturating_add(DbWeight::get().reads(8))
            .saturating_add(DbWeight::get().writes(8))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:1 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: CapitalDistribution Distributions (r:1 w:1)
    // Proof Skipped: CapitalDistribution Distributions (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Portfolio PortfolioLockedAssets (r:1 w:1)
    // Proof Skipped: Portfolio PortfolioLockedAssets (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleRefCount (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction Details (r:0 w:1)
    // Proof Skipped: CorporateAction Details (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateAction CADocLink (r:0 w:1)
    // Proof Skipped: CorporateAction CADocLink (max_values: None, max_size: None, mode: Measured)
    fn remove_ca_with_dist() -> Weight {
        // Minimum execution time: 158_916 nanoseconds.
        Weight::from_ref_time(190_795_000)
            .saturating_add(DbWeight::get().reads(9))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:1 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleRefCount (r:1 w:2)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint SchedulesMaxComplexity (r:1 w:0)
    // Proof Skipped: Checkpoint SchedulesMaxComplexity (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Checkpoint CachedNextCheckpoints (r:1 w:1)
    // Proof Skipped: Checkpoint CachedNextCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Checkpoint ScheduleIdSequence (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: ProtocolFee Coefficient (r:1 w:0)
    // Proof Skipped: ProtocolFee Coefficient (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: ProtocolFee BaseFees (r:1 w:0)
    // Proof Skipped: ProtocolFee BaseFees (max_values: None, max_size: None, mode: Measured)
    // Storage: CorporateBallot TimeRanges (r:1 w:0)
    // Proof Skipped: CorporateBallot TimeRanges (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduledCheckpoints (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduledCheckpoints (max_values: None, max_size: None, mode: Measured)
    fn change_record_date_with_ballot() -> Weight {
        // Minimum execution time: 159_267 nanoseconds.
        Weight::from_ref_time(192_931_000)
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(6))
    }
    // Storage: Identity KeyRecords (r:1 w:0)
    // Proof Skipped: Identity KeyRecords (max_values: None, max_size: None, mode: Measured)
    // Storage: ExternalAgents GroupOfAgent (r:1 w:0)
    // Proof Skipped: ExternalAgents GroupOfAgent (max_values: None, max_size: None, mode: Measured)
    // Storage: Permissions CurrentPalletName (r:1 w:0)
    // Proof Skipped: Permissions CurrentPalletName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Permissions CurrentDispatchableName (r:1 w:0)
    // Proof Skipped: Permissions CurrentDispatchableName (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: CorporateAction CorporateActions (r:1 w:1)
    // Proof Skipped: CorporateAction CorporateActions (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduleRefCount (r:1 w:2)
    // Proof Skipped: Checkpoint ScheduleRefCount (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint SchedulesMaxComplexity (r:1 w:0)
    // Proof Skipped: Checkpoint SchedulesMaxComplexity (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: Checkpoint CachedNextCheckpoints (r:1 w:1)
    // Proof Skipped: Checkpoint CachedNextCheckpoints (max_values: None, max_size: None, mode: Measured)
    // Storage: Timestamp Now (r:1 w:0)
    // Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
    // Storage: Checkpoint ScheduleIdSequence (r:1 w:1)
    // Proof Skipped: Checkpoint ScheduleIdSequence (max_values: None, max_size: None, mode: Measured)
    // Storage: ProtocolFee Coefficient (r:1 w:0)
    // Proof Skipped: ProtocolFee Coefficient (max_values: Some(1), max_size: None, mode: Measured)
    // Storage: ProtocolFee BaseFees (r:1 w:0)
    // Proof Skipped: ProtocolFee BaseFees (max_values: None, max_size: None, mode: Measured)
    // Storage: CapitalDistribution Distributions (r:1 w:0)
    // Proof Skipped: CapitalDistribution Distributions (max_values: None, max_size: None, mode: Measured)
    // Storage: Checkpoint ScheduledCheckpoints (r:0 w:1)
    // Proof Skipped: Checkpoint ScheduledCheckpoints (max_values: None, max_size: None, mode: Measured)
    fn change_record_date_with_dist() -> Weight {
        // Minimum execution time: 165_639 nanoseconds.
        Weight::from_ref_time(183_683_000)
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(6))
    }
}
