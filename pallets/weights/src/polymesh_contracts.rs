// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for polymesh_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-01-26, STEPS: `100`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 512
//! HOSTNAME: `dev-fsn001`, CPU: `AMD Ryzen 9 5950X 16-Core Processor`

// Executed Command:
// ./target/release/polymesh
// benchmark
// pallet
// -s
// 100
// -r
// 5
// -p=polymesh_contracts
// -e=*
// --heap-pages
// 4096
// --db-cache
// 512
// --execution
// wasm
// --wasm-execution
// compiled
// --output
// ./pallets/weights/src/
// --template
// ./.maintain/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use polymesh_runtime_common::{RocksDbWeight as DbWeight, Weight};

/// Weights for polymesh_contracts using the Substrate node and recommended hardware.
pub struct SubstrateWeight;
impl polymesh_contracts::WeightInfo for SubstrateWeight {
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: unknown [0x00] (r:1 w:0)
    // Storage: System EventTopics (r:2 w:2)
    // Storage: unknown [0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f] (r:1 w:0)
    /// The range of component `k` is `[1, 8192]`.
    /// The range of component `v` is `[1, 8192]`.
    fn chain_extension_read_storage(k: u32, v: u32) -> Weight {
        // Minimum execution time: 347_332 nanoseconds.
        Weight::from_ref_time(351_172_435)
            // Standard Error: 345
            .saturating_add(Weight::from_ref_time(4_831).saturating_mul(k.into()))
            // Standard Error: 345
            .saturating_add(Weight::from_ref_time(516).saturating_mul(v.into()))
            .saturating_add(DbWeight::get().reads(14))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `r` is `[0, 20]`.
    fn chain_extension_get_version(r: u32) -> Weight {
        // Minimum execution time: 328_206 nanoseconds.
        Weight::from_ref_time(337_724_520)
            // Standard Error: 104_122
            .saturating_add(Weight::from_ref_time(41_328_968).saturating_mul(r.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:3 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `r` is `[1, 20]`.
    fn chain_extension_get_key_did(r: u32) -> Weight {
        // Minimum execution time: 507_377 nanoseconds.
        Weight::from_ref_time(295_838_386)
            // Standard Error: 293_521
            .saturating_add(Weight::from_ref_time(177_423_672).saturating_mul(r.into()))
            .saturating_add(DbWeight::get().reads(14))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `r` is `[0, 20]`.
    fn chain_extension_hash_twox_64(r: u32) -> Weight {
        // Minimum execution time: 340_168 nanoseconds.
        Weight::from_ref_time(359_665_012)
            // Standard Error: 155_209
            .saturating_add(Weight::from_ref_time(55_417_519).saturating_mul(r.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `n` is `[0, 64]`.
    fn chain_extension_hash_twox_64_per_kb(n: u32) -> Weight {
        // Minimum execution time: 396_021 nanoseconds.
        Weight::from_ref_time(411_427_942)
            // Standard Error: 41_027
            .saturating_add(Weight::from_ref_time(27_975_923).saturating_mul(n.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `r` is `[0, 20]`.
    fn chain_extension_hash_twox_128(r: u32) -> Weight {
        // Minimum execution time: 339_177 nanoseconds.
        Weight::from_ref_time(342_453_106)
            // Standard Error: 88_907
            .saturating_add(Weight::from_ref_time(57_426_349).saturating_mul(r.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `n` is `[0, 64]`.
    fn chain_extension_hash_twox_128_per_kb(n: u32) -> Weight {
        // Minimum execution time: 404_507 nanoseconds.
        Weight::from_ref_time(432_268_343)
            // Standard Error: 89_675
            .saturating_add(Weight::from_ref_time(33_381_322).saturating_mul(n.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `r` is `[0, 20]`.
    fn chain_extension_hash_twox_256(r: u32) -> Weight {
        // Minimum execution time: 340_499 nanoseconds.
        Weight::from_ref_time(357_889_957)
            // Standard Error: 79_880
            .saturating_add(Weight::from_ref_time(60_023_880).saturating_mul(r.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `n` is `[0, 64]`.
    fn chain_extension_hash_twox_256_per_kb(n: u32) -> Weight {
        // Minimum execution time: 406_601 nanoseconds.
        Weight::from_ref_time(410_262_449)
            // Standard Error: 41_323
            .saturating_add(Weight::from_ref_time(45_367_218).saturating_mul(n.into()))
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: Contracts CallRuntimeWhitelist (r:1 w:0)
    // Storage: Identity CurrentPayer (r:1 w:1)
    // Storage: Identity CurrentDid (r:1 w:1)
    // Storage: Permissions CurrentPalletName (r:1 w:1)
    // Storage: Permissions CurrentDispatchableName (r:1 w:1)
    // Storage: System EventTopics (r:2 w:2)
    /// The range of component `n` is `[1, 8188]`.
    fn chain_extension_call_runtime(n: u32) -> Weight {
        // Minimum execution time: 366_697 nanoseconds.
        Weight::from_ref_time(373_448_528)
            // Standard Error: 341
            .saturating_add(Weight::from_ref_time(2_048).saturating_mul(n.into()))
            .saturating_add(DbWeight::get().reads(18))
            .saturating_add(DbWeight::get().writes(7))
    }
    // Storage: Identity KeyRecords (r:2 w:0)
    // Storage: System Account (r:1 w:0)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Contracts CodeStorage (r:1 w:0)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:2 w:2)
    fn dummy_contract() -> Weight {
        // Minimum execution time: 207_864 nanoseconds.
        Weight::from_ref_time(208_786_000)
            .saturating_add(DbWeight::get().reads(13))
            .saturating_add(DbWeight::get().writes(3))
    }
    /// The range of component `n` is `[1, 8188]`.
    fn basic_runtime_call(n: u32) -> Weight {
        // Minimum execution time: 5_831 nanoseconds.
        Weight::from_ref_time(6_621_456)
            // Standard Error: 3
            .saturating_add(Weight::from_ref_time(11).saturating_mul(n.into()))
    }
    // Storage: Identity KeyRecords (r:2 w:1)
    // Storage: Contracts CodeStorage (r:1 w:1)
    // Storage: System Account (r:2 w:2)
    // Storage: Contracts Nonce (r:1 w:1)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: Contracts OwnerInfoOf (r:1 w:1)
    // Storage: System EventTopics (r:2 w:2)
    // Storage: Identity DidKeys (r:0 w:1)
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_hash_perms(s: u32) -> Weight {
        // Minimum execution time: 308_280 nanoseconds.
        Weight::from_ref_time(315_207_860)
            // Standard Error: 13
            .saturating_add(Weight::from_ref_time(2_628).saturating_mul(s.into()))
            .saturating_add(DbWeight::get().reads(16))
            .saturating_add(DbWeight::get().writes(10))
    }
    // Storage: Identity KeyRecords (r:2 w:1)
    // Storage: Contracts CodeStorage (r:1 w:1)
    // Storage: System Account (r:2 w:2)
    // Storage: Contracts Nonce (r:1 w:1)
    // Storage: Contracts ContractInfoOf (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Identity IsDidFrozen (r:1 w:0)
    // Storage: Instance2Group ActiveMembers (r:1 w:0)
    // Storage: Instance2Group InactiveMembers (r:1 w:0)
    // Storage: Identity Claims (r:2 w:0)
    // Storage: System EventTopics (r:3 w:3)
    // Storage: Identity DidKeys (r:0 w:1)
    // Storage: Contracts PristineCode (r:0 w:1)
    // Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// The range of component `c` is `[0, 64226]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_code_perms(c: u32, s: u32) -> Weight {
        // Minimum execution time: 3_277_423 nanoseconds.
        Weight::from_ref_time(481_656_529)
            // Standard Error: 218
            .saturating_add(Weight::from_ref_time(97_176).saturating_mul(c.into()))
            // Standard Error: 13
            .saturating_add(Weight::from_ref_time(2_801).saturating_mul(s.into()))
            .saturating_add(DbWeight::get().reads(16))
            .saturating_add(DbWeight::get().writes(12))
    }
    // Storage: Contracts CallRuntimeWhitelist (r:0 w:20)
    /// The range of component `u` is `[0, 2000]`.
    fn update_call_runtime_whitelist(u: u32) -> Weight {
        // Minimum execution time: 6_392 nanoseconds.
        Weight::from_ref_time(6_402_000)
            // Standard Error: 2_915
            .saturating_add(Weight::from_ref_time(1_258_445).saturating_mul(u.into()))
            .saturating_add(DbWeight::get().writes((1_u64).saturating_mul(u.into())))
    }
}
